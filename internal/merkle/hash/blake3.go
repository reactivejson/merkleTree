package hash

import (
	"lukechampine.com/blake3"
)

/**
 * @author Mohamed-Aly Bou-Hanane
 * Â© 2023
 */
const _blake3hashlength = 32

// BLAKE3 is the Blake3 hashing method.
type BLAKE3 struct{}

// New creates a new BLAKE3 hashing method.
func NewBlake3() *BLAKE3 {
	return &BLAKE3{}
}

// HashLength returns the length of hashes generated by Hash() in bytes.
func (h *BLAKE3) HashLength() int {
	return _blake3hashlength
}

// Hash generates a BLAKE2b hash from input byte arrays.
func (h *BLAKE3) Hash(data ...[]byte) []byte {
	var hash [_blake3hashlength]byte
	if len(data) == 1 {
		hash = blake3.Sum256(data[0])
	} else {
		concatDataLen := 0
		for _, d := range data {
			concatDataLen += len(d)
		}
		concatData := make([]byte, concatDataLen)
		curOffset := 0
		for _, d := range data {
			copy(concatData[curOffset:], d)
			curOffset += len(d)
		}
		hash = blake3.Sum256(concatData)
	}

	return hash[:]
}
